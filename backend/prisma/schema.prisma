// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  email      String   @unique @db.VarChar(100)
  password   String   @db.VarChar(255)
  project    Project[]
  cvs        CV[]
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model CV {
  id           Int      @id @default(autoincrement())
  filename     String
  originalName String
  textContent  String?
  vectorId     String?
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  evaluations  Evaluation[]
  created_at   DateTime  @default(now())
}

model Project {
  id           Int      @id @default(autoincrement())
  filename     String
  originalName String
  textContent  String?
  vectorId     String?
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  evaluations  Evaluation[]
  created_at   DateTime  @default(now())
}


model Evaluation {
  id               Int       @id @default(autoincrement())
  cvId             Int
  cv               CV        @relation(fields: [cvId], references: [id])
  projectId        Int
  project          Project   @relation(fields: [projectId], references: [id])

  cv_match_rate    Float?
  cv_feedback      String?
  project_score    Float?
  project_feedback String?
  overall_summary  String?
  rawResponse      Json?

  created_at       DateTime  @default(now())
}


